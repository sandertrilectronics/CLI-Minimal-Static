/*
 * cli_static.h
 */

#ifndef CLI_STATIC_H_
#define CLI_STATIC_H_

#include <stdint.h>

//////////////////////////
// application specific
#include "usb_app.h"
#define CLI_PUTS(fmt)		usb_printf(fmt, 0)
//////////////////////////

#ifndef CLI_PUTS
	#define CLI_PUTS(fmt)
#endif

// function pointer typedef
typedef void (*command_line_callback_f)(char *command_str);

// command structure
typedef struct {
	// The command that causes the command interperter to be executed.
	// For example "help".  Must be all lower case.
	const char *command_str;
	// String that describes how to use the command.  Should start with
	// the command itself, and end with "\r\n".
	const char *help_str;
	// A pointer to the callback function that will return the output
	// generated by the command.
	const command_line_callback_f command_callback;
	// Commands expect a fixed number of parameters, which may be zero.
	uint8_t parameter_count;
} cli_command_definition_t;

// process incomming data
extern int cli_process_command(char *received_command_str);

// get specific parameter number
extern char *cli_get_parameter(char *command_string, int wanted_parameter, int *parameter_str_len);

#endif // CLI_STATIC_H_
